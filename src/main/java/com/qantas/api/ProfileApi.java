/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.qantas.api;

import com.qantas.model.Profile;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-05-15T11:21:49.461Z")

@Api(value = "profile", description = "the profile API")
public interface ProfileApi {

    @ApiOperation(value = "Add a new profile", nickname = "addProfile", notes = "Used to create a new profile", tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/profile",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addProfile(@ApiParam(value = "Profile object that needs to be sent to backend CRM" ,required=true )  @Valid @RequestBody Profile body);


    @ApiOperation(value = "Deletes a profile", nickname = "deleteProfile", notes = "", tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Profile not found") })
    @RequestMapping(value = "/profile/{profileId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteProfile(@ApiParam(value = "ID of profile of interest",required=true) @PathVariable("profileId") Long profileId);


    @ApiOperation(value = "Update an existing profile", nickname = "updateProfile", notes = "Update profile", tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Profile not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/profile/{profileId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateProfile(@ApiParam(value = "ID of profile of interest",required=true) @PathVariable("profileId") Long profileId,@ApiParam(value = "Profile object that needs sent to CRM" ,required=true )  @Valid @RequestBody Profile body);

}
